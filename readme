My Tables In Mysql -

CREATE TABLE departments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    manager_id INT,
    FOREIGN KEY (manager_id) REFERENCES employees(id) ON DELETE SET NULL
);

CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('employee', 'manager') DEFAULT 'employee',
    department_id INT,
    FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE SET NULL
);

Apis -

1. Sign Up:
Method: POST
URL: http://localhost:3000/signup
Body (JSON):
json
Copy code
{
  "name": "John Doe",
  "location": "City A",
  "email": "john.doe@example.com",
  "password": "password123",
  "role": "employee"
}
Replace the values with your desired user information.
2. Login:
Method: POST
URL: http://localhost:3000/login
Body (JSON):
json
Copy code
{
  "email": "john.doe@example.com",
  "password": "password123"
}
Replace the values with the email and password of the user you signed up.
3. Access Departments (Requires Token):
Method: GET
URL: http://localhost:3000/departments
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
4. Create Department (Requires Token):
Method: POST
URL: http://localhost:3000/departments
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
Body (JSON):
json
Copy code
{
  "name": "Department A",
  "manager_id": 1
}
Replace the values with your desired department information.
5. Update Department (Requires Token):
Method: PUT
URL: http://localhost:3000/departments/{department_id}
Replace {department_id} with the ID of the department you want to update.
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
Body (JSON):
json
Copy code
{
  "name": "Updated Department A",
  "manager_id": 2
}
Replace the values with your desired updated department information.
6. Delete Department (Requires Token):
Method: DELETE
URL: http://localhost:3000/departments/{department_id}
Replace {department_id} with the ID of the department you want to delete.
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
7. Access Employees (Requires Token):
Method: GET
URL: http://localhost:3000/employees
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
8. Create Employee (Requires Token):
Method: POST
URL: http://localhost:3000/employees
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
Body (JSON):
json
Copy code
{
  "name": "Jane Doe",
  "location": "City B",
  "email": "jane.doe@example.com",
  "password": "password456",
  "department_id": 1
}
Replace the values with your desired employee information.
9. Update Employee (Requires Token):
Method: PUT
URL: http://localhost:3000/employees/{employee_id}
Replace {employee_id} with the ID of the employee you want to update.
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
Body (JSON):
json
Copy code
{
  "name": "Updated Jane Doe",
  "location": "City C",
  "email": "jane.doe@example.com",
  "password": "updatedPassword789",
  "department_id": 2
}
Replace the values with your desired updated employee information.
10. Delete Employee (Requires Token):
Method: DELETE
URL: http://localhost:3000/employees/{employee_id}
Replace {employee_id} with the ID of the employee you want to delete.
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
11. Filter Employees by Location (Requires Token):
Method: GET
URL: http://localhost:3000/employees/location
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
12. Filter Employees by Name (Requires Token):
Method: GET
URL: http://localhost:3000/employees/name
Headers:
Key: Authorization
Value: Bearer YOUR_TOKEN
Replace YOUR_TOKEN with the token received during login.
These are the basic Postman requests for the provided Node.js application. Adjust the values according to your application and database setup.
